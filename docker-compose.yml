services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper-container
    restart: always
    ports:
      - 2181:2181
    networks:
      - skynet

  kafka:
    image: wurstmeister/kafka
    container_name: kafka-container
    restart: always
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    links:
      - zookeeper:zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - skynet

  redis:
    image: redis:alpine
    container_name: redis-container
    ports:
      - 6379:6379
    networks:
      - skynet

  postgres:
    image: postgres:17.2-alpine
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: market_data_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - skynet

  market-data-api:
    build: ./market-data-api
    container_name: market-data-api-container
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - zookeeper
    networks:
      - skynet

  market-data-core:
    build: ./market-data-core
    container_name: market-data-core-container
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/market_data_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=12345
    ports:
      - 8081:8080
    depends_on:
      - postgres
      - kafka
      - zookeeper
      - redis
    networks:
      - skynet

volumes:
  postgres_data:
    driver: local

networks:
  skynet:
